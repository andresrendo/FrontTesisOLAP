{"ast":null,"code":"// src/api.js\n\nconst API_BASE = 'http://localhost:3000/api';\nexport async function fetchRevenueByCountry() {\n  const res = await fetch(`${API_BASE}/olap/revenue-by-country`);\n  if (!res.ok) throw new Error('Error al obtener revenue-by-country');\n  return await res.json();\n}\nexport async function fetchTopRoutes() {\n  const res = await fetch(`${API_BASE}/olap/top-routes`);\n  if (!res.ok) throw new Error('Error al obtener top-routes');\n  return await res.json();\n}\nexport async function fetchMonitor(db) {\n  const res = await fetch(`${API_BASE}/monitor/${db}`);\n  if (!res.ok) throw new Error('Error al obtener monitor');\n  return await res.json();\n}\nexport async function fetchHealth() {\n  const res = await fetch(`${API_BASE}/health`);\n  if (!res.ok) throw new Error('Error al obtener health');\n  return await res.json();\n}\nexport async function fetchHealthPg() {\n  const res = await fetch(`${API_BASE}/health/pg`);\n  if (!res.ok) throw new Error('Error al obtener health pg');\n  return await res.json();\n}\nexport async function fetchHealthMonet() {\n  const res = await fetch(`${API_BASE}/health/monet`);\n  if (!res.ok) throw new Error('Error al obtener health monet');\n  return await res.json();\n}","map":{"version":3,"names":["API_BASE","fetchRevenueByCountry","res","fetch","ok","Error","json","fetchTopRoutes","fetchMonitor","db","fetchHealth","fetchHealthPg","fetchHealthMonet"],"sources":["C:/Users/leona/Documents/frontendTesis/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nconst API_BASE = 'http://localhost:3000/api';\r\n\r\nexport async function fetchRevenueByCountry() {\r\n  const res = await fetch(`${API_BASE}/olap/revenue-by-country`);\r\n  if (!res.ok) throw new Error('Error al obtener revenue-by-country');\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchTopRoutes() {\r\n  const res = await fetch(`${API_BASE}/olap/top-routes`);\r\n  if (!res.ok) throw new Error('Error al obtener top-routes');\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchMonitor(db) {\r\n  const res = await fetch(`${API_BASE}/monitor/${db}`);\r\n  if (!res.ok) throw new Error('Error al obtener monitor');\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchHealth() {\r\n  const res = await fetch(`${API_BASE}/health`);\r\n  if (!res.ok) throw new Error('Error al obtener health');\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchHealthPg() {\r\n  const res = await fetch(`${API_BASE}/health/pg`);\r\n  if (!res.ok) throw new Error('Error al obtener health pg');\r\n  return await res.json();\r\n}\r\n\r\nexport async function fetchHealthMonet() {\r\n  const res = await fetch(`${API_BASE}/health/monet`);\r\n  if (!res.ok) throw new Error('Error al obtener health monet');\r\n  return await res.json();\r\n}\r\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,eAAeC,qBAAqBA,CAAA,EAAG;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,0BAA0B,CAAC;EAC9D,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACnE,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,kBAAkB,CAAC;EACtD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeE,YAAYA,CAACC,EAAE,EAAE;EACrC,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,YAAYS,EAAE,EAAE,CAAC;EACpD,IAAI,CAACP,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeI,WAAWA,CAAA,EAAG;EAClC,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,SAAS,CAAC;EAC7C,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EACvD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeK,aAAaA,CAAA,EAAG;EACpC,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,YAAY,CAAC;EAChD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC1D,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeM,gBAAgBA,CAAA,EAAG;EACvC,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,eAAe,CAAC;EACnD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}