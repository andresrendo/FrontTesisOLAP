{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\Documents\\\\frontendTesis\\\\src\\\\components\\\\DockerStatsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchDockerStats } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DockerStatsTable({\n  pollMs = 5000\n}) {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [error, setError] = useState(null);\n  async function load() {\n    try {\n      setError(null);\n      const res = await fetchDockerStats();\n      setStats(res);\n    } catch (e) {\n      setError(String(e));\n      setStats(null);\n    }\n  }\n  useEffect(() => {\n    load();\n    if (pollMs > 0) {\n      const t = setInterval(load, pollMs);\n      return () => clearInterval(t);\n    }\n  }, [pollMs]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3 text-center\",\n    children: \"Cargando Docker stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-success text-white\",\n        children: \"Recursos Docker en Tiempo Real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Contenedor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"CPU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Memoria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Block I/O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Net I/O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 84\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(stats).map(name => {\n              const s = stats[name];\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.cpu || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.mem || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.blockio || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: s.netio || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(DockerStatsTable, \"xQX4Pq+UCR1Zm4y2jekjIJWAJJ0=\");\n_c = DockerStatsTable;\nexport default DockerStatsTable;\nvar _c;\n$RefreshReg$(_c, \"DockerStatsTable\");","map":{"version":3,"names":["React","useEffect","useState","fetchDockerStats","jsxDEV","_jsxDEV","DockerStatsTable","pollMs","_s","stats","setStats","error","setError","load","res","e","String","t","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","name","s","cpu","mem","blockio","netio","_c","$RefreshReg$"],"sources":["C:/Users/leona/Documents/frontendTesis/src/components/DockerStatsTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchDockerStats } from '../api';\r\n\r\nfunction DockerStatsTable({ pollMs = 5000 }) {\r\n  const [stats, setStats] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  async function load() {\r\n    try {\r\n      setError(null);\r\n      const res = await fetchDockerStats();\r\n      setStats(res);\r\n    } catch (e) {\r\n      setError(String(e));\r\n      setStats(null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    load();\r\n    if (pollMs > 0) {\r\n      const t = setInterval(load, pollMs);\r\n      return () => clearInterval(t);\r\n    }\r\n  }, [pollMs]);\r\n\r\n  if (error) return <div className=\"alert alert-danger\">Error: {error}</div>;\r\n  if (!stats) return <div className=\"p-3 text-center\">Cargando Docker stats...</div>;\r\n\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header bg-success text-white\">Recursos Docker en Tiempo Real</div>\r\n        <div className=\"card-body\">\r\n          <table className=\"table table-sm\">\r\n            <thead>\r\n              <tr><th>Contenedor</th><th>CPU</th><th>Memoria</th><th>Block I/O</th><th>Net I/O</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(stats).map(name => {\r\n                const s = stats[name];\r\n                return (\r\n                  <tr key={name}>\r\n                    <td>{name}</td>\r\n                    <td>{s.cpu || '-'}</td>\r\n                    <td>{s.mem || '-'}</td>\r\n                    <td>{s.blockio || '-'}</td>\r\n                    <td>{s.netio || '-'}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DockerStatsTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}