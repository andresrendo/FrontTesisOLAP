{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { fetchQuerySql } from '../api';\nfunction extractSqlField(val) {\n  if (val == null) return '';\n  if (typeof val === 'string') return val;\n  if (typeof val === 'object') {\n    // busca la primera propiedad string no vacía\n    for (const k of Object.keys(val)) {\n      if (typeof val[k] === 'string' && val[k].trim().length > 0) return val[k];\n    }\n    // casos comunes\n    if (typeof val.sql === 'string' && val.sql.trim().length > 0) return val.sql;\n    if (typeof val.query === 'string' && val.query.trim().length > 0) return val.query;\n    // fallback: stringify (útil para depuración)\n    try {\n      return JSON.stringify(val, null, 2);\n    } catch (e) {\n      return String(val);\n    }\n  }\n  return String(val);\n}\nexport default function useQuerySql(name, opts = {}) {\n  _s();\n  const [sqls, setSqls] = useState(null);\n  useEffect(() => {\n    let mounted = true;\n    if (!name) {\n      setSqls(null);\n      return;\n    }\n    setSqls(null);\n    console.log('useQuerySql: fetching', name, opts);\n    fetchQuerySql(name, opts).then(r => {\n      console.log('useQuerySql: fetchQuerySql response', name, r);\n      if (!mounted) return;\n      if (r && r.ok) {\n        const pg = extractSqlField(r.pg);\n        const monet = extractSqlField(r.monet);\n        console.log('useQuerySql: extracted', {\n          pgPreview: pg.slice(0, 200),\n          monetPreview: monet.slice(0, 200)\n        });\n        setSqls({\n          pg,\n          monet\n        });\n      } else {\n        setSqls(null);\n      }\n    }).catch(err => {\n      console.error('useQuerySql error', name, err);\n      if (mounted) setSqls(null);\n    });\n    return () => {\n      mounted = false;\n    };\n  }, [name, JSON.stringify(opts)]);\n  return sqls;\n}\n_s(useQuerySql, \"9CRXakPg5bexUtHjFkeagFTry90=\");","map":{"version":3,"names":["useEffect","useState","fetchQuerySql","extractSqlField","val","k","Object","keys","trim","length","sql","query","JSON","stringify","e","String","useQuerySql","name","opts","_s","sqls","setSqls","mounted","console","log","then","r","ok","pg","monet","pgPreview","slice","monetPreview","catch","err","error"],"sources":["C:/Users/leona/Documents/frontendTesis/src/hooks/useQuerySql.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { fetchQuerySql } from '../api';\r\n\r\nfunction extractSqlField(val) {\r\n  if (val == null) return '';\r\n  if (typeof val === 'string') return val;\r\n  if (typeof val === 'object') {\r\n    // busca la primera propiedad string no vacía\r\n    for (const k of Object.keys(val)) {\r\n      if (typeof val[k] === 'string' && val[k].trim().length > 0) return val[k];\r\n    }\r\n    // casos comunes\r\n    if (typeof val.sql === 'string' && val.sql.trim().length > 0) return val.sql;\r\n    if (typeof val.query === 'string' && val.query.trim().length > 0) return val.query;\r\n    // fallback: stringify (útil para depuración)\r\n    try { return JSON.stringify(val, null, 2); } catch (e) { return String(val); }\r\n  }\r\n  return String(val);\r\n}\r\n\r\nexport default function useQuerySql(name, opts = {}) {\r\n  const [sqls, setSqls] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (!name) {\r\n      setSqls(null);\r\n      return;\r\n    }\r\n\r\n    setSqls(null);\r\n    console.log('useQuerySql: fetching', name, opts);\r\n\r\n    fetchQuerySql(name, opts)\r\n      .then(r => {\r\n        console.log('useQuerySql: fetchQuerySql response', name, r);\r\n        if (!mounted) return;\r\n        if (r && r.ok) {\r\n          const pg = extractSqlField(r.pg);\r\n          const monet = extractSqlField(r.monet);\r\n          console.log('useQuerySql: extracted', { pgPreview: pg.slice(0, 200), monetPreview: monet.slice(0, 200) });\r\n          setSqls({ pg, monet });\r\n        } else {\r\n          setSqls(null);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('useQuerySql error', name, err);\r\n        if (mounted) setSqls(null);\r\n      });\r\n\r\n    return () => { mounted = false; };\r\n  }, [name, JSON.stringify(opts)]);\r\n\r\n  return sqls;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}